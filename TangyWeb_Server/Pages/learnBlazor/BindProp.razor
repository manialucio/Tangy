@page "/learnBlazor/BindProp"
<h2 class="text-success">Individual Product</h2>

<div class="row">
    <div class="col-6 border p-2">
        <h3 class="text-primary ">Product Summary</h3>
        <div>
            IsActive <input type="checkbox" @bind-value="@product.IsActive" checked="@(product.IsActive?"checked":null)" /><br />
        </div>
        <div>
            Price: <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /><br />
        </div>
        <div>
            Price: <input type="number" @bind="@product.Price" @bind:event="oninput" /><br />
        </div>

        <div>

            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in product.ProductProperties)
                {
                    <option value="@prop.Key">
                        @prop.Value
                    </option>
                }
            </select>
        </div>


    </div>
    <div class="col-6 border p-2">
        <h3 class="text-primary ">Product playgroud</h3>
        Name: @product.Name<br />
        Active:@product.IsActive
        This product is @(product.IsActive?"Active":"In-active") <br /><br />
        Price Echo: @product.Price<br />
        Property selected: @selectedProp<br />
        @if (!string.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property value: @product.ProductProperties.First(p=>p.Key==selectedProp).Value</p>
        }
    </div>

</div>
<div>
    <h2 class="text-success pt-4">Product Table</h2>

    <table class="table table-striped">
        <tbody>


        @foreach (var prod in Products)
        {
            <tr>
                <td>
                    <input type="text" @bind-value=prod.Name @bind-value:event="oninput" onfocus="@(product = Products.First(p=>p.Id == prod.Id))" /><br />

                </td>
                <td>
                    <input type="number" @bind-value=prod.Price @bind-value:event="oninput" onfocus="@(product = Products.First(p=>p.Id == prod.Id))"/><br />
                </td>
                <td>
                    <input type="checkbox" @bind-value=prod.IsActive checked="@(prod.IsActive?"checked":null)" onfocus="@(product = Products.First(p=>p.Id == prod.Id ))"/>
                </td>
            </tr>
        }
                </tbody>

    </table>
    <h2 class="text-info">Product Summary</h2>
    @foreach (var prod in Products)
    {
        <div>
            @prod.Name [@prod.Price.ToString()] This product is @(prod.IsActive?"Active":"In-active") 
        </div>
    }
</div>

@code {
    private string selectedProp = "";
    Demo_Product product = new()
    {
        Id = 1,
        Name = "xxxRose",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp { Id=1, Key="Color", Value="Black"},
                new Demo_ProductProp { Id=2, Key="Flavor", Value="Rose Jasmine"},
                new Demo_ProductProp { Id=3, Key="Size", Value="20oz"},

            }
    };

    List<Demo_Product> Products = new();
    protected override void OnInitialized()
    {
        base.OnInitialized();





        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10,
                ProductProperties = new List<Demo_ProductProp>
                {
                     new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                     new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 11,
                ProductProperties = new List<Demo_ProductProp>
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp { Id = 3,Key = "Color",Value = "White"}
            }
            });

            product = Products.First();
    }
}
